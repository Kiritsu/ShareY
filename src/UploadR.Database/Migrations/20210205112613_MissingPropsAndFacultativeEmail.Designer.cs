// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UploadR.Database;

namespace UploadR.Database.Migrations
{
    [DbContext(typeof(UploadRContext))]
    [Migration("20210205112613_MissingPropsAndFacultativeEmail")]
    partial class MissingPropsAndFacultativeEmail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("UploadR.Database.Models.ShortenedUrl", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("guid");

                    b.Property<Guid>("AuthorGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("author_guid");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2021, 2, 5, 12, 26, 12, 724, DateTimeKind.Local).AddTicks(855))
                        .HasColumnName("created_at");

                    b.Property<TimeSpan>("ExpiryTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("interval")
                        .HasDefaultValue(new TimeSpan(0, 0, 0, 0, 0))
                        .HasColumnName("expiry_time");

                    b.Property<DateTime>("LastSeen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2021, 2, 5, 12, 26, 12, 724, DateTimeKind.Local).AddTicks(1329))
                        .HasColumnName("last_seen");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<bool>("Removed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("removed");

                    b.Property<long>("SeenCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("seen_count");

                    b.Property<string>("Shorten")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shorten");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Guid")
                        .HasName("pk_shortenedurl_guid");

                    b.HasIndex("AuthorGuid");

                    b.ToTable("shortenedurls");
                });

            modelBuilder.Entity("UploadR.Database.Models.Upload", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("guid");

                    b.Property<Guid>("AuthorGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("author_guid");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content_type");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2021, 2, 5, 12, 26, 12, 722, DateTimeKind.Local).AddTicks(4588))
                        .HasColumnName("created_at");

                    b.Property<TimeSpan>("ExpiryTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("interval")
                        .HasDefaultValue(new TimeSpan(0, 0, 0, 0, 0))
                        .HasColumnName("expiry_time");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<DateTime>("LastSeen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2021, 2, 5, 12, 26, 12, 722, DateTimeKind.Local).AddTicks(5334))
                        .HasColumnName("last_seen");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<bool>("Removed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("removed");

                    b.Property<long>("SeenCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("seen_count");

                    b.HasKey("Guid")
                        .HasName("pk_upload_guid");

                    b.HasIndex("AuthorGuid");

                    b.ToTable("uploads");
                });

            modelBuilder.Entity("UploadR.Database.Models.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("guid");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2021, 2, 5, 12, 26, 12, 709, DateTimeKind.Local).AddTicks(4934))
                        .HasColumnName("created_at");

                    b.Property<bool>("Disabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("disabled");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("api_token");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("account_type");

                    b.HasKey("Guid")
                        .HasName("pk_user_guid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("UploadR.Database.Models.ShortenedUrl", b =>
                {
                    b.HasOne("UploadR.Database.Models.User", "Author")
                        .WithMany("Shortens")
                        .HasForeignKey("AuthorGuid")
                        .HasConstraintName("fkey_user_authorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("UploadR.Database.Models.Upload", b =>
                {
                    b.HasOne("UploadR.Database.Models.User", "Author")
                        .WithMany("Uploads")
                        .HasForeignKey("AuthorGuid")
                        .HasConstraintName("fkey_user_authorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("UploadR.Database.Models.User", b =>
                {
                    b.Navigation("Shortens");

                    b.Navigation("Uploads");
                });
#pragma warning restore 612, 618
        }
    }
}
